#!/usr/bin/env node

/*
 * Zest command line utility
 *
 * zest start [configPath]
 * zest start-nodemon [configPath]
 *
 */


var fs = require('fs'),
  path = require('path'),
  spawn = require('child_process').spawn;

var args = process.argv.splice(2);

if (args.length == 0)
  args.push('start');

switch (args[0]) {
  case 'start':
    startZest(args[1], false);
    break;
  case 'start-nodemon':
    startZest(args[1], true);
    break;
  default:
    console.log('Unrecognised command "' + args[0] + '".');
    break;
}

function startZest(configPath, nodemon) {
  var isDir = !configPath || configPath && configPath.substr(configPath.length - 1, 1) == '/';
  configPath = configPath ? path.resolve(configPath) : process.cwd();
  if (isDir && configPath.substr(configPath.length - 1, 1) != '/')
    configPath += '/';
  var configDir = isDir ? configPath : path.dirname(configPath);
  
  //for nodemon, rerun the current script through nodemon to get monitoring
  if (nodemon) {
    var nodemon = spawn('nodemon', [module.filename, 'start', configPath], { cwd: configDir });
    nodemon.stdout.on('data', function(data) {
      process.stdout.write(data);
    });
    nodemon.stderr.on('data', function(data) {
      process.stderr.write(data);
    });
  }
  
  var localBinPath = path.resolve(configDir, 'node_modules/.bin/zest');

  if (fs.existsSync(localBinPath)) {
    //run the local version of zest through the local bin
    console.log('Running zest server as a local module');
    var server = spawn(localBinPath, [configPath], { cwd: configDir });
    server.stdout.on('data', function(data) {
      process.stdout.write(data);
    });
    server.stderr.on('data', function(data) {
      process.stderr.write(data)
    });
  }
  else {
    //run the version of zest in the current directory (this version of zest server)
    var zest = require('./zest-server');
    zest.createServer(configPath);
  }
}
